#!/usr/bin/env python

import os
import argparse
import subprocess
import shutil

def main(aln_file, output_dir, threads):
    if not os.path.isfile(aln_file):
        print(f"Error: Alignment file {aln_file} does not exist.")
        exit(1)
    
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    base_name = os.path.basename(aln_file).rsplit('.', 1)[0]

    iqtree_cmd = [
        "iqtree2",
        "-s", aln_file,
        "-st", "AA",
        "-nt", str(threads),
        "-bb", "1000",
        "-m", "LG+G4+FO+I",
        "--prefix", base_name
    ]

    print(f"Running iqtree2: {' '.join(iqtree_cmd)}")
    subprocess.call(iqtree_cmd)

    result_files = [
        f"{base_name}.uniqueseq.phy", f"{base_name}.treefile", f"{base_name}.splits.nex",
        f"{base_name}.model.gz", f"{base_name}.mldist", f"{base_name}.log",
        f"{base_name}.iqtree", f"{base_name}.contree", f"{base_name}.ckp.gz",
        f"{base_name}.bionj", f"{base_name}.best_scheme.nex", f"{base_name}.best_scheme",
        f"{base_name}.best_model.nex"
    ]

    for file in result_files:
        if os.path.exists(file):
            shutil.move(file, os.path.join(output_dir, file))
        else:
            print(f"Warning: {file} not found. It may not have been generated by iqtree2.")

    print("Processing completed. Results are saved in the specified output directory.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Run iqtree2 on an amino acid alignment file and move the results to the specified output directory.")
    parser.add_argument('-i', '--aln_file', required=True, help="Input .aln file (amino acid alignment file)")
    parser.add_argument('-o', '--output_dir', required=True, help="Output directory for the result files")
    parser.add_argument('-t', '--threads', required=True, type=int, help="Number of threads to use for iqtree2")

    args = parser.parse_args()

    main(args.aln_file, args.output_dir, args.threads)
